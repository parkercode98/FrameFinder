// --------------------------------- Imports -------------------------------- //
@use '@/styles/mixins' as *;
@use '@/styles/colors' as colors;

// -------------------------------- Tailwind -------------------------------- //
@tailwind base;
@tailwind components;
@tailwind utilities;
// ---------------------------------- Toast --------------------------------- //
@import 'react-toastify/dist/ReactToastify.css';

/* -------------------------------------------------------------------------- */

:root {
  @include map-to-css(module-variables(colors), 'color-');
  --border-radius: 0.4rem;
  --scrollbar-color: var(--color-primary-main);
  --root-scrollbar-color: transparent;
  --shadow-color: 218deg 50% 9%;
  --shadow-elevation-low: 0.3px 0.2px 0.3px hsl(var(--shadow-color) / 0.43),
    0.4px 0.3px 0.4px -2.2px hsl(var(--shadow-color) / 0.3),
    1px 0.8px 1.1px -4.4px hsl(var(--shadow-color) / 0.18);
  --shadow-elevation-medium: 0.3px 0.2px 0.3px hsl(var(--shadow-color) / 0.36),
    0.4px 0.4px 0.5px -1.1px hsl(var(--shadow-color) / 0.3),
    1px 0.8px 1.1px -2.2px hsl(var(--shadow-color) / 0.23),
    2.3px 1.9px 2.5px -3.3px hsl(var(--shadow-color) / 0.17),
    4.9px 4.1px 5.3px -4.4px hsl(var(--shadow-color) / 0.11);
  --shadow-elevation-high: 0.3px 0.2px 0.3px hsl(var(--shadow-color) / 0.33),
    0.5px 0.4px 0.5px -0.5px hsl(var(--shadow-color) / 0.31),
    0.8px 0.7px 0.9px -1px hsl(var(--shadow-color) / 0.28),
    1.4px 1.2px 1.5px -1.5px hsl(var(--shadow-color) / 0.25),
    2.4px 2.1px 2.7px -2px hsl(var(--shadow-color) / 0.22),
    4.1px 3.5px 4.5px -2.5px hsl(var(--shadow-color) / 0.19),
    6.6px 5.6px 7.2px -3px hsl(var(--shadow-color) / 0.16),
    10px 8.4px 10.9px -3.5px hsl(var(--shadow-color) / 0.13),
    14.5px 12.2px 15.8px -4px hsl(var(--shadow-color) / 0.1),
    20.2px 17.1px 22px -4.4px hsl(var(--shadow-color) / 0.07);
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  color: inherit;
  font-family: inherit;
  color-scheme: inherit;
  scroll-behavior: smooth;
  // mdn: https://developer.mozilla.org/en-US/docs/Web/CSS/filter-function/drop-shadow()
}

html,
body {
  width: 100%;
  height: 100%;
}

html {
  background-color: var(--color-background-main);
  @include scrollbars(3px, var(--root-scrollbar-color));
}

body {
  position: relative;
  z-index: 0;
  min-height: 100vh;
  min-height: -webkit-fill-available;
  min-height: -moz-available;
  color: var(--color-text-primary);
  background: var(--color-background-main);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  @include scrollbars(3px, var(--scrollbar-color));
}

main {
  position: relative;
  z-index: 1;
  overflow-x: hidden;
  overflow-y: hidden;
  background: var(--color-background-main);
}

button {
  font: inherit;
  outline: none;
  border: none;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
  outline: none !important;
  border: none !important;
  box-shadow: none !important;
}

input {
  // outline: none;
  // border: none;
  // box-shadow: none;
  // border-color: transparent;
}

img,
picture,
video {
  display: block;
}

#__next {
  display: contents;
}

/* -------------------------------------------------------------------------- */
// ---------------------------------- Clerk --------------------------------- //

input.cl-formFieldInput {
  outline: none !important;
  border: none !important;
  box-shadow: none !important;
  border-color: transparent !important;
  background-color: var(--color-paper-light);
  &:hover,
  &:focus {
    background-color: #3c4452;
  }
}

button[class*='cl-internal'][data-localization-key='userProfile.profilePage.imageFormSubtitle'] {
  color: var(--color-secondary-light);
}

// -------------------------------- Tailwind -------------------------------- //

// ---------------------------------- Daisy --------------------------------- //

// --------------------------------- Custom --------------------------------- //
.scrollbars {
  @include scrollbars(3px, var(--color-primary-main));
}

.masked-overflow {
  /* scroll bar width, for use in mask calculations */
  --scrollbar-width: 8px;

  /* mask fade distance, for use in mask calculations */
  --mask-height: 32px;

  /* If content exceeds height of container, overflow! */
  overflow-y: auto;

  /* Our height limit */
  height: 300px;

  padding-bottom: var(--mask-height);

  /* Keep some space between content and scrollbar */
  padding-right: 20px;

  /* The CSS mask */

  /* The content mask is a linear gradient from top to bottom */
  --mask-image-content: linear-gradient(
    to bottom,
    transparent,
    black var(--mask-height),
    black calc(100% - var(--mask-height)),
    transparent
  );

  --mask-size-content: calc(100% - var(--scrollbar-width)) 100%;

  /* The scrollbar mask is a black pixel */
  --mask-image-scrollbar: linear-gradient(black, black);

  --mask-size-scrollbar: var(--scrollbar-width) 100%;

  /* Apply the mask image and mask size variables */
  mask-image: var(--mask-image-content), var(--mask-image-scrollbar);
  mask-size: var(--mask-size-content), var(--mask-size-scrollbar);

  mask-position: 0 0, 100% 0;

  /* We don't repeat our mask images */
  mask-repeat: no-repeat, no-repeat;
}

/* Firefox */
.masked-overflow {
  scrollbar-width: thin; /* can also be normal, or none, to not render scrollbar */
  scrollbar-color: currentColor transparent; /* foreground background */
}

/* Webkit / Blink */
.masked-overflow::-webkit-scrollbar {
  width: var(--scrollbar-width);
}

.masked-overflow::-webkit-scrollbar-thumb {
  background-color: currentColor;
  border-radius: 9999px; /* always round */
}

.masked-overflow::-webkit-scrollbar-track {
  background-color: transparent;
}

#dots #dot1 {
  animation: load 1s infinite;
}

#dots #dot2 {
  animation: load 1s infinite;
  animation-delay: 0.2s;
}

#dots #dot3 {
  animation: load 1s infinite;
  animation-delay: 0.4s;
}

@keyframes load {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

// ---------------------------------- Lucid --------------------------------- //
svg.Clipboard-Check {
  stroke: var(--color-success-light);
}
svg.Clipboard-X {
  stroke: var(--color-error-light);
}
